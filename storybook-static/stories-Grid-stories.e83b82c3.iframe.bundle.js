"use strict";(self.webpackChunkmars_rover=self.webpackChunkmars_rover||[]).push([[903],{"./src/stories/Grid.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,LargeGrid:()=>LargeGrid,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Grid_stories});__webpack_require__("./node_modules/react/index.js");var react_redux=__webpack_require__("./node_modules/react-redux/dist/react-redux.mjs"),redux_toolkit_modern=__webpack_require__("./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Grid=()=>{const{gridSize,position,direction,obstacles=[],trail=[]}=(0,react_redux.d4)((state=>state.rover)),renderCell=(x,y)=>{const isTrail=trail.some((pos=>pos.x===x&&pos.y===y));return position.x===x&&position.y===y?(0,jsx_runtime.jsx)("div",{className:"flex items-center justify-center",children:(0,jsx_runtime.jsx)("img",{src:"/rover.svg",alt:"Rover",className:"w-4 h-4 sm:w-5 sm:h-5 md:w-6 md:h-6 object-contain transform",style:{transform:`rotate(${"N"===direction?0:"E"===direction?90:"S"===direction?180:270}deg)`}})}):obstacles.some((obs=>obs.x===x&&obs.y===y))?(0,jsx_runtime.jsx)("div",{className:"flex items-center justify-center",children:(0,jsx_runtime.jsx)("img",{src:"/rock.svg",alt:"Obstacle",className:"w-4 h-4 sm:w-5 sm:h-5 md:w-6 md:h-6 object-contain"})}):isTrail?(0,jsx_runtime.jsx)("div",{className:"bg-[#290F1F] opacity-50 w-full h-full",title:`Trail point (${x}, ${y})`}):(0,jsx_runtime.jsx)("div",{className:"border border-[#7F1D1D]"})};return(0,jsx_runtime.jsx)("div",{className:"w-full max-w-md mx-auto p-2",children:(0,jsx_runtime.jsx)("div",{className:"grid gap-0 rounded-lg overflow-hidden bg-[#661B30] border-4 border-[#290F1F]",style:{gridTemplateColumns:`repeat(${gridSize.width}, 1fr)`,aspectRatio:"1/1"},children:Array.from({length:gridSize.height},((_,y)=>Array.from({length:gridSize.width},((_,x)=>(0,jsx_runtime.jsx)("div",{className:"aspect-square flex items-center justify-center border border-[#7F1D1D]",children:renderCell(x,y)},`${x}-${y}`)))))})})},components_Grid=Grid;Grid.__docgenInfo={description:"",methods:[],displayName:"Grid"};const directionMap={N:{left:"W",right:"E"},E:{left:"N",right:"S"},S:{left:"E",right:"W"},W:{left:"S",right:"N"}},roverSlice=(0,redux_toolkit_modern.Z0)({name:"rover",initialState:{position:{x:0,y:0},direction:"N",gridSize:{width:15,height:15},obstacles:[],error:null,commandHistory:[],trail:[{x:0,y:0}]},reducers:{moveRover:(state,action)=>{const{width,height}=state.gridSize,command=action.payload;if(state.error=null,state.commandHistory.push(command),!["f","b","l","r"].includes(command))return void(state.error=`Invalid command: ${command}`);let newPosition={...state.position},newDirection=state.direction;switch(command){case"f":case"b":switch(state.direction){case"N":newPosition.y+="f"===command?-1:1;break;case"S":newPosition.y+="f"===command?1:-1;break;case"E":newPosition.x+="f"===command?1:-1;break;case"W":newPosition.x+="f"===command?-1:1;break;default:return void(state.error=`Unexpected direction: ${state.direction}`)}newPosition.x=(newPosition.x+width)%width,newPosition.y=(newPosition.y+height)%height;break;case"l":newDirection=directionMap[state.direction].left;break;case"r":newDirection=directionMap[state.direction].right;break;default:return void(state.error=`Unexpected command: ${command}`)}if(["f","b"].includes(command)){if(state.obstacles.some((obs=>obs.x===newPosition.x&&obs.y===newPosition.y)))state.error="Obstacle detected! Movement stopped.";else{state.position=newPosition;state.trail.some((pos=>pos.x===newPosition.x&&pos.y===newPosition.y))||state.trail.push({...newPosition})}}state.direction=newDirection},setObstacles:(state,action)=>{state.obstacles=action.payload},resetError:state=>{state.error=null},resetRover:(state,action)=>{const payload=action.payload||{};state.position=payload.position||{x:0,y:0},state.direction=payload.direction||"N",state.obstacles=[],state.error=null,state.commandHistory=[],state.trail=[{x:state.position.x,y:state.position.y}]}}}),{moveRover,setObstacles,resetError,resetRover}=roverSlice.actions,redux_roverSlice=roverSlice.reducer,mockStore=initialState=>(0,redux_toolkit_modern.U1)({reducer:{rover:redux_roverSlice},preloadedState:initialState}),Grid_stories={title:"Components/Grid",component:components_Grid},Template=args=>(0,jsx_runtime.jsx)(react_redux.Kq,{store:mockStore(args.initialState),children:(0,jsx_runtime.jsx)(components_Grid,{})}),Default=Template.bind({});Default.args={initialState:{rover:{gridSize:{width:5,height:5},position:{x:2,y:2},direction:"N",obstacles:[{x:1,y:1},{x:3,y:3}],trail:[{x:0,y:0},{x:1,y:0}]}}};const LargeGrid=Template.bind({});LargeGrid.args={initialState:{rover:{gridSize:{width:10,height:10},position:{x:5,y:5},direction:"E",obstacles:[{x:2,y:3},{x:7,y:8}],trail:[{x:4,y:5},{x:6,y:5}]}}};const __namedExportsOrder=["Default","LargeGrid"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => <Provider store={mockStore(args.initialState)}>\r\n    <Grid />\r\n  </Provider>",...Default.parameters?.docs?.source}}},LargeGrid.parameters={...LargeGrid.parameters,docs:{...LargeGrid.parameters?.docs,source:{originalSource:"args => <Provider store={mockStore(args.initialState)}>\r\n    <Grid />\r\n  </Provider>",...LargeGrid.parameters?.docs?.source}}}}}]);